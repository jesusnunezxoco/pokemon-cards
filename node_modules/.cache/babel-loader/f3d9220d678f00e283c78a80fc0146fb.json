{"ast":null,"code":"var _jsxFileName = \"/home/jesusnunezxoco/coding/jnx/pokemon-cards/src/components/PokeInfo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nexport default function PokeInfo(props) {\n  let [pokemon, setPokemon] = useState({\n    base_happiness: \"\",\n    category: \"\",\n    color: \"\",\n    description: \"\",\n    generation: \"\",\n    habitat: \"\",\n    height: 0,\n    id: 0,\n    image: \"\",\n    is_baby: false,\n    name: \"\",\n    types: \"\",\n    weight: 0\n  });\n  let endpoint = \"https://pokeapi.co/api/v2\";\n  let pagePokeId = window.location.href.substring(window.location.href.lastIndexOf(\"/\") + 1);\n  useEffect(() => {\n    // get pokemon urls\n    axios.get(`${endpoint}/pokemon-species/${pagePokeId}`).then(response => {\n      return response.data;\n    }).then(d => {\n      setPokemon({\n        name: d.name,\n        color: d.color.name,\n        generation: d.generation.name,\n        is_baby: d.is_baby,\n        description: d.flavor_text_entries[6].flavor_text,\n        id: d.id,\n        category: d.genera[7].genus,\n        habitat: d.habitat.name,\n        base_happiness: d.base_happiness\n      });\n    }).then(halfData => {\n      // Joins data from /pokemon-species with /pokemon\n      axios.get(`${endpoint}/pokemon/${pagePokeId}`).then(response => {\n        console.log(response.data);\n        return response.data;\n      }).then(d => {\n        setPokemon({ ...halfData,\n          height: d.height / 10,\n          //decimeteres to meters\n          weight: d.weight / 10,\n          // hectograms to grams\n          image: d.sprites.front_default,\n          types: d.types.map((t, i) => t.type.name).join(\" | \")\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }, [endpoint, pagePokeId]);\n  useEffect(() => {\n    console.log(pokemon);\n  }, [pokemon]); // const types = pokemon.types.map(t => t.type.name).join(\" | \")\n\n  const pokeDetailedInfo = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Category: \"), pokemon.category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Generation: \"), pokemon.generation), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Habitat: \"), pokemon.habitat), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Color: \"), pokemon.color), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Height: \"), pokemon.height, \"m /\", \" \", Number(Math.round(pokemon.height * 3.281 + \"e2\") + \"e-2\"), \"ft\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Weight: \"), pokemon.weight, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Description: \"), pokemon.description));\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    key: `pokeinfo${pokemon.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"#\", pokemon.id, \" \", pokemon.name), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Type: \"), pokemon.types), /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemon.image,\n    alt: pokemon.name,\n    style: {\n      height: \"50vh\",\n      width: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, pokeDetailedInfo))));\n}","map":{"version":3,"sources":["/home/jesusnunezxoco/coding/jnx/pokemon-cards/src/components/PokeInfo.js"],"names":["React","useState","useEffect","axios","Jumbotron","Container","Row","Col","PokeInfo","props","pokemon","setPokemon","base_happiness","category","color","description","generation","habitat","height","id","image","is_baby","name","types","weight","endpoint","pagePokeId","window","location","href","substring","lastIndexOf","get","then","response","data","d","flavor_text_entries","flavor_text","genera","genus","halfData","console","log","sprites","front_default","map","t","i","type","join","catch","error","pokeDetailedInfo","Number","Math","round","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AACnCW,IAAAA,cAAc,EAAE,EADmB;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,WAAW,EAAE,EAJsB;AAKnCC,IAAAA,UAAU,EAAE,EALuB;AAMnCC,IAAAA,OAAO,EAAE,EAN0B;AAOnCC,IAAAA,MAAM,EAAE,CAP2B;AAQnCC,IAAAA,EAAE,EAAE,CAR+B;AASnCC,IAAAA,KAAK,EAAE,EAT4B;AAUnCC,IAAAA,OAAO,EAAE,KAV0B;AAWnCC,IAAAA,IAAI,EAAE,EAX6B;AAYnCC,IAAAA,KAAK,EAAE,EAZ4B;AAanCC,IAAAA,MAAM,EAAE;AAb2B,GAAD,CAApC;AAgBA,MAAIC,QAAQ,GAAG,2BAAf;AACA,MAAIC,UAAU,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CACfH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBE,WAArB,CAAiC,GAAjC,IAAwC,CADzB,CAAjB;AAIA7B,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,KAAK,CACF6B,GADH,CACQ,GAAEP,QAAS,oBAAmBC,UAAW,EADjD,EAEGO,IAFH,CAESC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJH,EAKGF,IALH,CAKSG,CAAD,IAAO;AACXzB,MAAAA,UAAU,CAAC;AACTW,QAAAA,IAAI,EAAEc,CAAC,CAACd,IADC;AAETR,QAAAA,KAAK,EAAEsB,CAAC,CAACtB,KAAF,CAAQQ,IAFN;AAGTN,QAAAA,UAAU,EAAEoB,CAAC,CAACpB,UAAF,CAAaM,IAHhB;AAITD,QAAAA,OAAO,EAAEe,CAAC,CAACf,OAJF;AAKTN,QAAAA,WAAW,EAAEqB,CAAC,CAACC,mBAAF,CAAsB,CAAtB,EAAyBC,WAL7B;AAMTnB,QAAAA,EAAE,EAAEiB,CAAC,CAACjB,EANG;AAOTN,QAAAA,QAAQ,EAAEuB,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYC,KAPb;AAQTvB,QAAAA,OAAO,EAAEmB,CAAC,CAACnB,OAAF,CAAUK,IARV;AASTV,QAAAA,cAAc,EAAEwB,CAAC,CAACxB;AATT,OAAD,CAAV;AAWD,KAjBH,EAkBGqB,IAlBH,CAkBSQ,QAAD,IAAc;AAClB;AACAtC,MAAAA,KAAK,CACF6B,GADH,CACQ,GAAEP,QAAS,YAAWC,UAAW,EADzC,EAEGO,IAFH,CAESC,QAAD,IAAc;AAClBQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACC,IAArB;AACA,eAAOD,QAAQ,CAACC,IAAhB;AACD,OALH,EAMGF,IANH,CAMSG,CAAD,IAAO;AACXzB,QAAAA,UAAU,CAAC,EACT,GAAG8B,QADM;AAETvB,UAAAA,MAAM,EAAEkB,CAAC,CAAClB,MAAF,GAAW,EAFV;AAEc;AACvBM,UAAAA,MAAM,EAAEY,CAAC,CAACZ,MAAF,GAAW,EAHV;AAGc;AACvBJ,UAAAA,KAAK,EAAEgB,CAAC,CAACQ,OAAF,CAAUC,aAJR;AAKTtB,UAAAA,KAAK,EAAEa,CAAC,CAACb,KAAF,CAAQuB,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAO3B,IAA7B,EAAmC4B,IAAnC,CAAwC,KAAxC;AALE,SAAD,CAAV;AAOD,OAdH,EAeGC,KAfH,CAeUC,KAAD,IAAW;AAChBV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,OAjBH;AAkBD,KAtCH;AAuCD,GAzCQ,EAyCN,CAAC3B,QAAD,EAAWC,UAAX,CAzCM,CAAT;AA2CAxB,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,OAAO,CAACC,GAAR,CAAYjC,OAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT,CAjEsC,CAqEtC;;AAEA,QAAM2C,gBAAgB,gBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG3C,OAAO,CAACG,QAFX,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGH,OAAO,CAACM,UAFX,CANF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGN,OAAO,CAACO,OAFX,CAVF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGP,OAAO,CAACI,KAFX,CAdF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGJ,OAAO,CAACQ,MAFX,SAEsB,GAFtB,EAGGoC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAW9C,OAAO,CAACQ,MAAR,GAAiB,KAAjB,GAAyB,IAApC,IAA4C,KAA7C,CAHT,OAlBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGR,OAAO,CAACc,MAFX,MAvBF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGd,OAAO,CAACK,WAFX,CA3BF,CADF;AAmCA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,GAAG,EAAG,WAAUL,OAAO,CAACS,EAAG,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACIT,OAAO,CAACS,EADZ,OACiBT,OAAO,CAACY,IADzB,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGZ,OAAO,CAACa,KAFX,CAJF,eAQE;AACE,IAAA,GAAG,EAAEb,OAAO,CAACU,KADf;AAEE,IAAA,GAAG,EAAEV,OAAO,CAACY,IAFf;AAGE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAM,EAAE,MAAV;AAAkBuC,MAAAA,KAAK,EAAE;AAAzB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAgBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,gBAAN,CAhBF,CADF,CADF,CADF;AAwBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function PokeInfo(props) {\n  let [pokemon, setPokemon] = useState({\n    base_happiness: \"\",\n    category: \"\",\n    color: \"\",\n    description: \"\",\n    generation: \"\",\n    habitat: \"\",\n    height: 0,\n    id: 0,\n    image: \"\",\n    is_baby: false,\n    name: \"\",\n    types: \"\",\n    weight: 0,\n  });\n\n  let endpoint = \"https://pokeapi.co/api/v2\";\n  let pagePokeId = window.location.href.substring(\n    window.location.href.lastIndexOf(\"/\") + 1\n  );\n\n  useEffect(() => {\n    // get pokemon urls\n    axios\n      .get(`${endpoint}/pokemon-species/${pagePokeId}`)\n      .then((response) => {\n        return response.data;\n      })\n      .then((d) => {\n        setPokemon({\n          name: d.name,\n          color: d.color.name,\n          generation: d.generation.name,\n          is_baby: d.is_baby,\n          description: d.flavor_text_entries[6].flavor_text,\n          id: d.id,\n          category: d.genera[7].genus,\n          habitat: d.habitat.name,\n          base_happiness: d.base_happiness,\n        });\n      })\n      .then((halfData) => {\n        // Joins data from /pokemon-species with /pokemon\n        axios\n          .get(`${endpoint}/pokemon/${pagePokeId}`)\n          .then((response) => {\n            console.log(response.data);\n            return response.data;\n          })\n          .then((d) => {\n            setPokemon({\n              ...halfData,\n              height: d.height / 10, //decimeteres to meters\n              weight: d.weight / 10, // hectograms to grams\n              image: d.sprites.front_default,\n              types: d.types.map((t, i) => t.type.name).join(\" | \"),\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  }, [endpoint, pagePokeId]);\n\n  useEffect(() => {\n    console.log(pokemon);\n  }, [pokemon]);\n\n  // const types = pokemon.types.map(t => t.type.name).join(\" | \")\n\n  const pokeDetailedInfo = (\n    <div>\n      <p>\n        <strong>Category: </strong>\n        {pokemon.category}\n      </p>\n\n      <p>\n        <strong>Generation: </strong>\n        {pokemon.generation}\n      </p>\n      <p>\n        <strong>Habitat: </strong>\n        {pokemon.habitat}\n      </p>\n      <p>\n        <strong>Color: </strong>\n        {pokemon.color}\n      </p>\n      <p>\n        <strong>Height: </strong>\n        {pokemon.height}m /{\" \"}\n        {Number(Math.round(pokemon.height * 3.281 + \"e2\") + \"e-2\")}ft\n      </p>\n      <p>\n        <strong>Weight: </strong>\n        {pokemon.weight}g\n      </p>\n      <p>\n        <strong>Description: </strong>\n        {pokemon.description}\n      </p>\n    </div>\n  );\n\n  return (\n    <Jumbotron fluid key={`pokeinfo${pokemon.id}`}>\n      <Container>\n        <Row>\n          <Col>\n            <h1>\n              #{pokemon.id} {pokemon.name}\n            </h1>\n            <h2>\n              <strong>Type: </strong>\n              {pokemon.types}\n            </h2>\n            <img\n              src={pokemon.image}\n              alt={pokemon.name}\n              style={{ height: \"50vh\", width: \"auto\" }}\n            ></img>\n          </Col>\n\n          <Col>{pokeDetailedInfo}</Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}