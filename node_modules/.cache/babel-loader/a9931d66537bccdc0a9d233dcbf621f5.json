{"ast":null,"code":"var _jsxFileName = \"/home/jesusnunezxoco/coding/jnx/pokemon-cards/src/components/PokeInfo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nexport default function PokeInfo(props) {\n  let [pokemon, setPokemon] = useState({\n    base_happiness: \"\",\n    category: \"\",\n    color: \"\",\n    description: \"\",\n    generation: \"\",\n    habitat: \"\",\n    height: 0,\n    id: 0,\n    image: \"\",\n    is_baby: false,\n    name: \"\",\n    types: \"\",\n    weight: 0\n  });\n  let endpoint = \"https://pokeapi.co/api/v2\";\n  let pagePokeId = window.location.href.substring(window.location.href.lastIndexOf(\"/\") + 1);\n  useEffect(() => {\n    let firstData = {}; // get pokemon urls\n\n    axios.get(`${endpoint}/pokemon-species/${pagePokeId}`).then(response => {\n      return response.data;\n    }).then(d => {\n      firstData = {\n        name: d.name,\n        color: d.color.name,\n        generation: d.generation.name,\n        is_baby: d.is_baby,\n        description: d.flavor_text_entries[6].flavor_text,\n        id: d.id,\n        category: d.genera[7].genus,\n        habitat: d.habitat.name,\n        base_happiness: d.base_happiness\n      };\n    }).catch(error => {\n      console.log(error);\n    }); // Joins data from /pokemon-species with /pokemon\n\n    axios.get(`${endpoint}/pokemon/${pagePokeId}`).then(response => {\n      console.log(response.data);\n      return response.data;\n    }).then(d => {\n      setPokemon({ ...firstData,\n        height: d.height / 10,\n        //decimeteres to meters\n        weight: d.weight / 10,\n        // hectograms to grams\n        image: d.sprites.front_default,\n        types: d.types.map((t, i) => t.type.name).join(\" | \")\n      });\n    });\n  }, [endpoint, pagePokeId]);\n  useEffect(() => {\n    console.log(pokemon);\n  }, [pokemon]); // const types = pokemon.types.map(t => t.type.name).join(\" | \")\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    key: `pokeinfo${pokemon.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"#\", pokemon.id, \" \", pokemon.name), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Type: \"), pokemon.types), /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemon.image,\n    alt: pokemon.name,\n    style: {\n      height: \"50vh\",\n      width: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Category: \"), pokemon.category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Generation: \"), pokemon.generation), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Habitat: \"), pokemon.habitat), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Color: \"), pokemon.color), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Height: \"), pokemon.height, \"m\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Weight: \"), pokemon.weight, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Description: \"), pokemon.description)))));\n}","map":{"version":3,"sources":["/home/jesusnunezxoco/coding/jnx/pokemon-cards/src/components/PokeInfo.js"],"names":["React","useState","useEffect","axios","Jumbotron","Container","Row","Col","PokeInfo","props","pokemon","setPokemon","base_happiness","category","color","description","generation","habitat","height","id","image","is_baby","name","types","weight","endpoint","pagePokeId","window","location","href","substring","lastIndexOf","firstData","get","then","response","data","d","flavor_text_entries","flavor_text","genera","genus","catch","error","console","log","sprites","front_default","map","t","i","type","join","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function PokeInfo(props) {\n  let [pokemon, setPokemon] = useState({\n    base_happiness: \"\",\n    category: \"\",\n    color: \"\",\n    description: \"\",\n    generation: \"\",\n    habitat: \"\",\n    height: 0,\n    id: 0,\n    image: \"\",\n    is_baby: false,\n    name: \"\",\n    types: \"\",\n    weight: 0,\n  });\n\n  let endpoint = \"https://pokeapi.co/api/v2\";\n  let pagePokeId = window.location.href.substring(\n    window.location.href.lastIndexOf(\"/\") + 1\n  );\n\n  useEffect(() => {\n    let firstData = {};\n    // get pokemon urls\n    axios\n      .get(`${endpoint}/pokemon-species/${pagePokeId}`)\n      .then((response) => {\n        return response.data;\n      })\n      .then((d) => {\n        firstData = {\n          name: d.name,\n          color: d.color.name,\n          generation: d.generation.name,\n          is_baby: d.is_baby,\n          description: d.flavor_text_entries[6].flavor_text,\n          id: d.id,\n          category: d.genera[7].genus,\n          habitat: d.habitat.name,\n          base_happiness: d.base_happiness,\n        };\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    // Joins data from /pokemon-species with /pokemon\n    axios\n      .get(`${endpoint}/pokemon/${pagePokeId}`)\n      .then((response) => {\n        console.log(response.data);\n        return response.data;\n      })\n      .then((d) => {\n        setPokemon({\n          ...firstData,\n          height: d.height/10, //decimeteres to meters\n          weight: d.weight/10, // hectograms to grams\n          image: d.sprites.front_default,\n          types: d.types.map((t, i) => t.type.name).join(\" | \"),\n        });\n      });\n  }, [endpoint, pagePokeId]);\n\n  useEffect(() => {\n    console.log(pokemon);\n  }, [pokemon]);\n\n  // const types = pokemon.types.map(t => t.type.name).join(\" | \")\n\n  return (\n    <Jumbotron fluid key={`pokeinfo${pokemon.id}`}>\n      <Container>\n        <Row>\n        <Col>\n        <h1>\n          #{pokemon.id} {pokemon.name}\n        </h1>\n        <h2>\n          <strong>Type: </strong>\n          {pokemon.types}\n        </h2>\n        <img\n          src={pokemon.image}\n          alt={pokemon.name}\n          style={{ height: \"50vh\", width: \"auto\" }}\n        ></img>\n        </Col>\n\n        <Col>\n        \n        <p>\n          <strong>Category: </strong>\n          {pokemon.category}\n        </p>\n\n        <p>\n          <strong>Generation: </strong>\n          {pokemon.generation}\n        </p>\n        <p>\n          <strong>Habitat: </strong>\n          {pokemon.habitat}\n        </p>\n        <p>\n          <strong>Color: </strong>\n          {pokemon.color}\n        </p>\n        <p>\n          <strong>Height: </strong>\n          {pokemon.height}m\n        </p>\n        <p>\n          <strong>Weight: </strong>\n          {pokemon.weight}g\n        </p>\n        <p>\n          <strong>Description: </strong>\n          {pokemon.description}\n        </p>\n        </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}