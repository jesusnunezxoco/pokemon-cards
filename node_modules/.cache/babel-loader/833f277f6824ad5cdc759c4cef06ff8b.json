{"ast":null,"code":"var _jsxFileName = \"/home/jesusnunezxoco/coding/jnx/pokemon-cards/src/components/PokeInfo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nexport default function PokeInfo(props) {\n  let [pokemon, setPokemon] = useState({\n    name: \"\",\n    flavor_text_entries: [{\n      flavor_text: \"\"\n    }]\n  });\n  let endpoint = \"https://pokeapi.co/api/v2\";\n  let pagePokeId = window.location.href.substring(window.location.href.lastIndexOf(\"/\") + 1);\n  useEffect(() => {\n    // get pokemon urls\n    axios.get(`${endpoint}/pokemon-species/${pagePokeId}`).then(response => {\n      return response.data;\n    }).then(d => {\n      setPokemon({\n        name: d.name,\n        color: d.color.name,\n        generation: d.generation.name,\n        is_baby: d.is_baby,\n        description: d.flavor_text_entries[6].flavor_text,\n        id: d.id,\n        category: d.genera[7].genus,\n        habitat: d.habitat,\n        base_happiness: d.base_happiness\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [endpoint, pagePokeId]);\n  useEffect(() => {\n    axios.get(`${endpoint}/pokemon/${pagePokeId}`).then(response => {\n      console.log(response.data);\n      return response.data;\n    }).then(d => {\n      console.log({ ...pokemon,\n        height: d.height,\n        weight: d.weight,\n        image: d.sprites.front_default\n      });\n    });\n  }, [endpoint, pagePokeId, pokemon]);\n  useEffect(() => {\n    console.log(pokemon);\n  }, [pokemon]); // const types = pokemon.types.map(t => t.type.name).join(\" | \")\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    key: `pokeinfo${pokemon.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"#\", pokemon.id, \" \", pokemon.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, pokemon.description), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    alt: pokemon.name,\n    style: {\n      height: \"50vh\",\n      width: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/jesusnunezxoco/coding/jnx/pokemon-cards/src/components/PokeInfo.js"],"names":["React","useState","useEffect","axios","Jumbotron","Container","PokeInfo","props","pokemon","setPokemon","name","flavor_text_entries","flavor_text","endpoint","pagePokeId","window","location","href","substring","lastIndexOf","get","then","response","data","d","color","generation","is_baby","description","id","category","genera","genus","habitat","base_happiness","catch","error","console","log","height","weight","image","sprites","front_default","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function PokeInfo(props) {\n  let [pokemon, setPokemon] = useState({\n    name: \"\",\n    flavor_text_entries: [{ flavor_text: \"\" }],\n  });\n  let endpoint = \"https://pokeapi.co/api/v2\";\n  let pagePokeId = window.location.href.substring(window.location.href.lastIndexOf(\"/\")+1)\n\n  useEffect(() => {\n   \n    // get pokemon urls\n    axios\n      .get(`${endpoint}/pokemon-species/${pagePokeId}`)\n      .then((response) => {\n        return response.data;\n      })\n      .then((d) => {\n        setPokemon({\n          name: d.name,\n          color: d.color.name,\n          generation: d.generation.name,\n          is_baby: d.is_baby,\n          description: d.flavor_text_entries[6].flavor_text,\n          id: d.id,\n          category: d.genera[7].genus,\n          habitat: d.habitat,\n          base_happiness: d.base_happiness\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }, [endpoint, pagePokeId]);\n\n  useEffect(() => {\n    axios.get(`${endpoint}/pokemon/${pagePokeId}`)\n    .then(response => {\n      console.log(response.data)\n      return response.data\n    })\n    .then(d => {\n      console.log({...pokemon, height: d.height, weight: d.weight, image: d.sprites.front_default\n      })\n    })\n  }, [endpoint, pagePokeId, pokemon])\n\n  useEffect(() => {\n    console.log(pokemon);\n  }, [pokemon]);\n\n  // const types = pokemon.types.map(t => t.type.name).join(\" | \")\n\n  return (\n    <Jumbotron fluid key={`pokeinfo${pokemon.id}`}>\n      <Container>\n        <h1>\n          #{pokemon.id} {pokemon.name}{\" \"}\n        </h1>\n        <p>{pokemon.description}</p>\n        {/* <p><strong>Height: </strong>{pokemon.height}</p> */}\n        {/* <p><strong>Weight: </strong>{pokemon.weight}</p> */}\n        <img\n          src={\"\"}\n          alt={pokemon.name}\n          style={{ height: \"50vh\", width: \"auto\" }}\n        ></img>\n      </Container>\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}